var _user$project$Ui_Button$link = function (href) {
	return _user$project$Ui_Internal_Options$option(
		function (options) {
			return _elm_lang$core$Native_Utils.update(
				options,
				{
					link: _elm_lang$core$Maybe$Just(href)
				});
		});
};
var _user$project$Ui_Button$darkTheme = _user$project$Ui_Options$cs('mdc-button--dark-theme');
var _user$project$Ui_Button$noMargin = _user$project$Ui_Options$many(
	{
		ctor: '::',
		_0: A2(_user$project$Ui_Options$css, 'margin', '0'),
		_1: {
			ctor: '::',
			_0: A2(_user$project$Ui_Options$css, 'padding', '0'),
			_1: {ctor: '[]'}
		}
	});
var _user$project$Ui_Button$danger = A2(_user$project$Ui_Options$css, 'color', '#d50000');
var _user$project$Ui_Button$stroked = _user$project$Ui_Options$cs('mdc-button--stroked');
var _user$project$Ui_Button$unelevated = _user$project$Ui_Options$cs('mdc-button--unelevated');
var _user$project$Ui_Button$secondary = _user$project$Ui_Options$cs('mdc-button--accent');
var _user$project$Ui_Button$primary = _user$project$Ui_Options$cs('mdc-button--primary');
var _user$project$Ui_Button$dense = _user$project$Ui_Options$cs('mdc-button--dense');
var _user$project$Ui_Button$compact = _user$project$Ui_Options$cs('mdc-button--compact');
var _user$project$Ui_Button$ripple = _user$project$Ui_Internal_Options$option(
	function (options) {
		return _elm_lang$core$Native_Utils.update(
			options,
			{ripple: true});
	});
var _user$project$Ui_Button$raised = _user$project$Ui_Options$cs('mdc-button--raised');
var _user$project$Ui_Button$disabled = _user$project$Ui_Internal_Options$option(
	function (options) {
		return _elm_lang$core$Native_Utils.update(
			options,
			{disabled: true});
	});
var _user$project$Ui_Button$defaultConfig = {ripple: false, link: _elm_lang$core$Maybe$Nothing, disabled: false};
var _user$project$Ui_Button$view = F4(
	function (lift, model, options, nodes) {
		var _p0 = A5(
			_user$project$Ui_Ripple$view,
			false,
			function (_p1) {
				return lift(
					_user$project$Ui_Internal_Button$RippleMsg(_p1));
			},
			model.ripple,
			{ctor: '_Tuple0'},
			{ctor: '_Tuple0'});
		var rippleOptions = _p0._0;
		var rippleStyles = _p0._1;
		var _p2 = A2(_user$project$Ui_Internal_Options$collect, _user$project$Ui_Button$defaultConfig, options);
		var summary = _p2;
		var config = _p2.config;
		return A5(
			_user$project$Ui_Internal_Options$apply,
			summary,
			(!_elm_lang$core$Native_Utils.eq(config.link, _elm_lang$core$Maybe$Nothing)) ? _elm_lang$html$Html$a : _elm_lang$html$Html$button,
			{
				ctor: '::',
				_0: _user$project$Ui_Options$cs('mdc-button'),
				_1: {
					ctor: '::',
					_0: _user$project$Ui_Options$cs('mdc-js-button'),
					_1: {
						ctor: '::',
						_0: A2(
							_user$project$Ui_Options$when,
							summary.config.ripple,
							_user$project$Ui_Options$cs('mdc-js-ripple-effect')),
						_1: {
							ctor: '::',
							_0: A2(_user$project$Ui_Options$css, 'box-sizing', 'border-box'),
							_1: {
								ctor: '::',
								_0: A2(
									_user$project$Ui_Options$when,
									(!_elm_lang$core$Native_Utils.eq(config.link, _elm_lang$core$Maybe$Nothing)) && (!config.disabled),
									_user$project$Ui_Internal_Options$attribute(
										_elm_lang$html$Html_Attributes$href(
											A2(_elm_lang$core$Maybe$withDefault, '', config.link)))),
								_1: {
									ctor: '::',
									_0: A2(
										_user$project$Ui_Options$when,
										config.disabled,
										_user$project$Ui_Internal_Options$attribute(
											_elm_lang$html$Html_Attributes$disabled(true))),
									_1: {
										ctor: '::',
										_0: A2(
											_user$project$Ui_Options$when,
											config.disabled,
											_user$project$Ui_Options$cs('mdc-button--disabled')),
										_1: {
											ctor: '::',
											_0: A2(_user$project$Ui_Options$when, config.ripple, rippleOptions),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				}
			},
			{
				ctor: '::',
				_0: _user$project$Ui_Internal_Helpers$blurOn('mouseup'),
				_1: {
					ctor: '::',
					_0: _user$project$Ui_Internal_Helpers$blurOn('mouseleave'),
					_1: {
						ctor: '::',
						_0: _user$project$Ui_Internal_Helpers$blurOn('touchend'),
						_1: {ctor: '[]'}
					}
				}
			},
			A2(
				_elm_lang$core$Basics_ops['++'],
				nodes,
				{
					ctor: '::',
					_0: rippleStyles,
					_1: {ctor: '[]'}
				}));
	});
var _user$project$Ui_Button$update = F2(
	function (msg, model) {
		var _p3 = msg;
		var _p4 = A2(_user$project$Ui_Ripple$update, _p3._0, model.ripple);
		var ripple = _p4._0;
		var effects = _p4._1;
		return {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.update(
				model,
				{ripple: ripple}),
			_1: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Ui_Internal_Button$RippleMsg, effects)
		};
	});
var _user$project$Ui_Button$defaultModel = {ripple: _user$project$Ui_Ripple$defaultModel};
var _user$project$Ui_Button$Model = function (a) {
	return {ripple: a};
};
var _user$project$Ui_Button$Config = F3(
	function (a, b, c) {
		return {ripple: a, link: b, disabled: c};
	});
