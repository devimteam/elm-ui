var _user$project$Ui_SliderWithTextfield$sumConfig = function () {
	var textfield = _user$project$Ui_Textfield$defaultConfig;
	var slider = _user$project$Ui_Slider$defaultConfig;
	return {
		sliderConfig: _elm_lang$core$Native_Utils.update(
			slider,
			{value: 2000, min: 2000, max: 10000, steps: 1000}),
		textfieldConfig: _elm_lang$core$Native_Utils.update(
			textfield,
			{
				defaultValue: _elm_lang$core$Maybe$Just('2000'),
				asTitle: true,
				numbered: true,
				extra: _elm_lang$core$Maybe$Just('₽'),
				fullWidth: true,
				labelText: _elm_lang$core$Maybe$Just('Сумма')
			}),
		extraStatic: _elm_lang$core$Maybe$Just('₽'),
		extraPlural: _elm_lang$core$Maybe$Nothing
	};
}();
var _user$project$Ui_SliderWithTextfield$periodConfig = function () {
	var textfield = _user$project$Ui_Textfield$defaultConfig;
	var slider = _user$project$Ui_Slider$defaultConfig;
	return {
		sliderConfig: _elm_lang$core$Native_Utils.update(
			slider,
			{steps: 1}),
		textfieldConfig: _elm_lang$core$Native_Utils.update(
			textfield,
			{
				defaultValue: _elm_lang$core$Maybe$Just('7'),
				asTitle: true,
				numbered: true,
				plural: _elm_lang$core$Maybe$Just(
					A3(_user$project$Utils_General$Plural, 'день', 'дня', 'дней')),
				fullWidth: true,
				labelText: _elm_lang$core$Maybe$Just('Срок')
			}),
		extraPlural: _elm_lang$core$Maybe$Just(
			A3(_user$project$Utils_General$Plural, 'день', 'дня', 'дней')),
		extraStatic: _elm_lang$core$Maybe$Nothing
	};
}();
var _user$project$Ui_SliderWithTextfield$discretize = F2(
	function (value, sliderConfig) {
		var discretizedValue = A2(
			_user$project$Ui_Slider$discretize,
			sliderConfig.steps,
			A2(_elm_lang$core$Maybe$withDefault, 0, value));
		return (_elm_lang$core$Native_Utils.cmp(discretizedValue, sliderConfig.max) > 0) ? sliderConfig.max : ((_elm_lang$core$Native_Utils.cmp(discretizedValue, sliderConfig.min) < 0) ? sliderConfig.min : discretizedValue);
	});
var _user$project$Ui_SliderWithTextfield$onSliderMsg = F4(
	function (msg, model, _p0, previousInputText) {
		var _p1 = _p0;
		var _p2 = A2(_user$project$Ui_Slider$update, msg, model.slider);
		var newSliderModel = _p2._0;
		var discretizedValue = A2(_user$project$Ui_SliderWithTextfield$discretize, newSliderModel.value, _p1.sliderConfig);
		var _p3 = A4(
			_user$project$Ui_Textfield$externalUpdate,
			_user$project$Ui_Internal_Textfield$Input(
				_elm_lang$core$Basics$toString(discretizedValue)),
			model.textfield,
			_p1.textfieldConfig,
			previousInputText);
		var newTextfieldModel = _p3._0;
		var newText = _p3._1;
		var _p4 = msg;
		switch (_p4.ctor) {
			case 'MouseDrag':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{textfield: newTextfieldModel, slider: newSliderModel}),
					_1: newText
				};
			case 'MouseUp':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{textfield: newTextfieldModel, slider: newSliderModel}),
					_1: newText
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{slider: newSliderModel}),
					_1: previousInputText
				};
		}
	});
var _user$project$Ui_SliderWithTextfield$onTextfieldMsg = F4(
	function (msg, model, _p5, previousInputText) {
		var _p6 = _p5;
		var _p12 = _p6.textfieldConfig;
		var _p7 = A4(_user$project$Ui_Textfield$externalUpdate, msg, model.textfield, _p12, previousInputText);
		var newTextfieldModel = _p7._0;
		var newText = _p7._1;
		var discretizedTextfieldValue = A2(
			_user$project$Ui_SliderWithTextfield$discretize,
			_elm_lang$core$Maybe$Just(
				_elm_lang$core$Basics$toFloat(
					A2(
						_elm_lang$core$Result$withDefault,
						0,
						_elm_lang$core$String$toInt(
							A2(_elm_lang$core$Maybe$withDefault, '0', newText))))),
			_p6.sliderConfig);
		var _p8 = msg;
		switch (_p8.ctor) {
			case 'Blur':
				var _p9 = A4(
					_user$project$Ui_Textfield$externalUpdate,
					_user$project$Ui_Internal_Textfield$Input(
						_elm_lang$core$Basics$toString(discretizedTextfieldValue)),
					newTextfieldModel,
					_p12,
					previousInputText);
				var newTextfieldModel1 = _p9._0;
				var newText = _p9._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{textfield: newTextfieldModel1}),
					_1: newText
				};
			case 'Input':
				var _p10 = A2(
					_user$project$Ui_Slider$update,
					_user$project$Ui_Internal_Slider$SetValue(discretizedTextfieldValue),
					model.slider);
				var newSliderModel = _p10._0;
				var _p11 = A4(
					_user$project$Ui_Textfield$externalUpdate,
					_user$project$Ui_Internal_Textfield$Input(_p8._0),
					model.textfield,
					_p12,
					previousInputText);
				var newTextfieldModel1 = _p11._0;
				var newText = _p11._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{textfield: newTextfieldModel, slider: newSliderModel}),
					_1: newText
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{textfield: newTextfieldModel}),
					_1: previousInputText
				};
		}
	});
var _user$project$Ui_SliderWithTextfield$update = F4(
	function (msg, model, config, previousInputText) {
		var _p13 = msg;
		if (_p13.ctor === 'SliderMsg') {
			return A4(_user$project$Ui_SliderWithTextfield$onSliderMsg, _p13._0, model, config, previousInputText);
		} else {
			return A4(_user$project$Ui_SliderWithTextfield$onTextfieldMsg, _p13._0, model, config, previousInputText);
		}
	});
var _user$project$Ui_SliderWithTextfield$defaultModel = {slider: _user$project$Ui_Slider$defaultModel, textfield: _user$project$Ui_Textfield$defaultModel};
var _user$project$Ui_SliderWithTextfield$defaultConfig = function () {
	var textfield = _user$project$Ui_Textfield$defaultConfig;
	var slider = _user$project$Ui_Slider$defaultConfig;
	return {
		sliderConfig: _elm_lang$core$Native_Utils.update(
			slider,
			{value: 2000, min: 2000, max: 10000, steps: 1000}),
		textfieldConfig: _elm_lang$core$Native_Utils.update(
			textfield,
			{
				defaultValue: _elm_lang$core$Maybe$Just('2000'),
				asTitle: true,
				numbered: true,
				extra: _elm_lang$core$Maybe$Just('₽'),
				fullWidth: true,
				labelText: _elm_lang$core$Maybe$Just('Сумма')
			}),
		extraStatic: _elm_lang$core$Maybe$Just('₽'),
		extraPlural: _elm_lang$core$Maybe$Nothing
	};
}();
var _user$project$Ui_SliderWithTextfield$withLimits1 = F5(
	function (config, value, min, max, steps) {
		var resultValue = (_elm_lang$core$Native_Utils.cmp(value, max) > 0) ? max : ((_elm_lang$core$Native_Utils.cmp(value, min) < 0) ? min : value);
		var textfieldConfig = config.textfieldConfig;
		var sliderConfig = config.sliderConfig;
		var updatedSlider = _elm_lang$core$Native_Utils.update(
			sliderConfig,
			{min: min, max: max, steps: steps, value: resultValue});
		return _elm_lang$core$Native_Utils.update(
			config,
			{sliderConfig: updatedSlider});
	});
var _user$project$Ui_SliderWithTextfield$Model = F2(
	function (a, b) {
		return {slider: a, textfield: b};
	});
var _user$project$Ui_SliderWithTextfield$Config = F4(
	function (a, b, c, d) {
		return {sliderConfig: a, textfieldConfig: b, extraStatic: c, extraPlural: d};
	});
var _user$project$Ui_SliderWithTextfield$TextfieldMsg = function (a) {
	return {ctor: 'TextfieldMsg', _0: a};
};
var _user$project$Ui_SliderWithTextfield$SliderMsg = function (a) {
	return {ctor: 'SliderMsg', _0: a};
};
var _user$project$Ui_SliderWithTextfield$view = F3(
	function (inputText, model, _p14) {
		var _p15 = _p14;
		var _p16 = _p15.sliderConfig;
		var extra = A2(
			F2(
				function (x, y) {
					return A2(_elm_lang$core$Basics_ops['++'], x, y);
				}),
			A2(
				F2(
					function (x, y) {
						return A2(_elm_lang$core$Basics_ops['++'], x, y);
					}),
				' ',
				A2(_elm_lang$core$Maybe$withDefault, '', _p15.extraStatic)),
			A2(
				_elm_lang$core$Maybe$withDefault,
				'',
				A2(
					_elm_lang$core$Maybe$map,
					A2(
						_elm_lang$core$Basics$flip,
						_user$project$Utils_General$pluralize,
						_elm_lang$core$Basics$round(_p16.min)),
					_p15.extraPlural)));
		var labelMin = A2(
			_elm_lang$core$Basics_ops['++'],
			A2(_cuducos$elm_format_number$FormatNumber$format, _user$project$Utils_General$rusLocale, _p16.min),
			extra);
		var labelMax = A2(
			_elm_lang$core$Basics_ops['++'],
			A2(_cuducos$elm_format_number$FormatNumber$format, _user$project$Utils_General$rusLocale, _p16.max),
			extra);
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$style(
									{
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'width', _1: '368px'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'bottom', _1: '4px'},
											_1: {ctor: '[]'}
										}
									}),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$style(
											{
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'position', _1: 'relative'},
												_1: {
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: 'bottom', _1: '-8px'},
													_1: {ctor: '[]'}
												}
											}),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$map,
											_user$project$Ui_SliderWithTextfield$TextfieldMsg,
											A3(_user$project$Ui_Textfield$view, inputText, model.textfield, _p15.textfieldConfig)),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$div,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$style(
														{
															ctor: '::',
															_0: {ctor: '_Tuple2', _0: 'height', _1: '32px'},
															_1: {ctor: '[]'}
														}),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$map,
														_user$project$Ui_SliderWithTextfield$SliderMsg,
														A2(_user$project$Ui_Slider$view, model.slider, _p16)),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$div,
															{
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$class('ui-slider-with-textfield-labels-container'),
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_elm_lang$html$Html$div,
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$class('ui-slider-with-textfield-label'),
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html$text(labelMin),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_elm_lang$html$Html$div,
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html_Attributes$class('ui-slider-with-textfield-label'),
																			_1: {ctor: '[]'}
																		},
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html$text(labelMax),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			});
	});
var _user$project$Ui_SliderWithTextfield$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: A2(
				_elm_lang$core$Platform_Sub$map,
				_user$project$Ui_SliderWithTextfield$SliderMsg,
				_user$project$Ui_Slider$subscriptions(model.slider)),
			_1: {ctor: '[]'}
		});
};
