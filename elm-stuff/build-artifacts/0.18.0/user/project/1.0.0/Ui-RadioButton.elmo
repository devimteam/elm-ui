var _user$project$Ui_RadioButton$name = function (value) {
	return _user$project$Ui_Internal_Options$attribute(
		_elm_lang$html$Html_Attributes$name(value));
};
var _user$project$Ui_RadioButton$selected = _user$project$Ui_Internal_Options$option(
	function (config) {
		return _elm_lang$core$Native_Utils.update(
			config,
			{value: true});
	});
var _user$project$Ui_RadioButton$disabled = _user$project$Ui_Options$many(
	{
		ctor: '::',
		_0: _user$project$Ui_Options$cs('mdc-radio--disabled'),
		_1: {
			ctor: '::',
			_0: _user$project$Ui_Internal_Options$input(
				{
					ctor: '::',
					_0: _user$project$Ui_Internal_Options$attribute(
						_elm_lang$html$Html_Attributes$disabled(true)),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		}
	});
var _user$project$Ui_RadioButton$defaultConfig = {
	input: {ctor: '[]'},
	container: {ctor: '[]'},
	value: false
};
var _user$project$Ui_RadioButton$view = F4(
	function (lift, model, options, ch) {
		var _p0 = A5(
			_user$project$Ui_Ripple$view,
			true,
			function (_p1) {
				return lift(
					_user$project$Ui_Internal_RadioButton$RippleMsg(_p1));
			},
			model.ripple,
			{ctor: '[]'},
			{ctor: '[]'});
		var rippleOptions = _p0._0;
		var rippleStyle = _p0._1;
		var _p2 = A2(_user$project$Ui_Internal_Options$collect, _user$project$Ui_RadioButton$defaultConfig, options);
		var summary = _p2;
		var config = _p2.config;
		return A3(
			_user$project$Ui_Options$styled,
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _user$project$Ui_Options$cs('mdc-form-field'),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: A4(
						_user$project$Ui_Internal_Options$applyContainer,
						summary,
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _user$project$Ui_Options$cs('mdc-radio'),
							_1: {
								ctor: '::',
								_0: _user$project$Ui_Internal_Options$attribute(
									_user$project$Ui_Internal_Helpers$blurOn('mouseup')),
								_1: {
									ctor: '::',
									_0: rippleOptions,
									_1: {ctor: '[]'}
								}
							}
						},
						{
							ctor: '::',
							_0: A4(
								_user$project$Ui_Internal_Options$applyInput,
								summary,
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _user$project$Ui_Options$cs('mdc-radio__native-control'),
									_1: {
										ctor: '::',
										_0: _user$project$Ui_Internal_Options$attribute(
											_elm_lang$html$Html_Attributes$type_('radio')),
										_1: {
											ctor: '::',
											_0: _user$project$Ui_Internal_Options$attribute(
												_elm_lang$html$Html_Attributes$checked(config.value)),
											_1: {
												ctor: '::',
												_0: A3(
													_user$project$Ui_Internal_Options$on1,
													'focus',
													lift,
													_user$project$Ui_Internal_RadioButton$SetFocus(true)),
												_1: {
													ctor: '::',
													_0: A3(
														_user$project$Ui_Internal_Options$on1,
														'blur',
														lift,
														_user$project$Ui_Internal_RadioButton$SetFocus(false)),
													_1: {
														ctor: '::',
														_0: A3(
															_user$project$Ui_Options$onWithOptions,
															'click',
															{preventDefault: true, stopPropagation: false},
															_elm_lang$core$Json_Decode$succeed(
																lift(_user$project$Ui_Internal_RadioButton$NoOp))),
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A3(
									_user$project$Ui_Options$styled,
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _user$project$Ui_Options$cs('mdc-radio__background'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A3(
											_user$project$Ui_Options$styled,
											_elm_lang$html$Html$div,
											{
												ctor: '::',
												_0: _user$project$Ui_Options$cs('mdc-radio__inner-circle'),
												_1: {ctor: '[]'}
											},
											{ctor: '[]'}),
										_1: {
											ctor: '::',
											_0: A3(
												_user$project$Ui_Options$styled,
												_elm_lang$html$Html$div,
												{
													ctor: '::',
													_0: _user$project$Ui_Options$cs('mdc-radio__outer-circle'),
													_1: {ctor: '[]'}
												},
												{ctor: '[]'}),
											_1: {ctor: '[]'}
										}
									}),
								_1: {
									ctor: '::',
									_0: rippleStyle,
									_1: {ctor: '[]'}
								}
							}
						}),
					_1: {ctor: '[]'}
				},
				ch));
	});
var _user$project$Ui_RadioButton$update = F3(
	function (lift, msg, model) {
		var _p3 = msg;
		switch (_p3.ctor) {
			case 'RippleMsg':
				var _p4 = A2(_user$project$Ui_Ripple$update, _p3._0, model.ripple);
				var ripple = _p4._0;
				var effects = _p4._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Maybe$Just(
						_elm_lang$core$Native_Utils.update(
							model,
							{ripple: ripple})),
					_1: A2(
						_elm_lang$core$Platform_Cmd$map,
						function (_p5) {
							return lift(
								_user$project$Ui_Internal_RadioButton$RippleMsg(_p5));
						},
						effects)
				};
			case 'SetFocus':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Maybe$Just(
						_elm_lang$core$Native_Utils.update(
							model,
							{isFocused: _p3._0})),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {ctor: '_Tuple2', _0: _elm_lang$core$Maybe$Nothing, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$Ui_RadioButton$defaultModel = {ripple: _user$project$Ui_Ripple$defaultModel, isFocused: false};
var _user$project$Ui_RadioButton$Model = F2(
	function (a, b) {
		return {ripple: a, isFocused: b};
	});
var _user$project$Ui_RadioButton$Config = F3(
	function (a, b, c) {
		return {input: a, container: b, value: c};
	});
